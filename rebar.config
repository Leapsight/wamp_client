{minimum_otp_vsn, "23.0"}.

{erl_opts, [debug_info]}.

{deps,
 [msgpack,
  {pbkdf2, {git, "https://github.com/pma/erlang-pbkdf2", {branch, "master"}}},
  jsone,
  gproc,
  flatlog,
  logger_colorful,
  {app_config, {git, "https://gitlab.com/leapsight/app_config.git", {branch, "master"}}},
  {awre, {git, "https://github.com/aramallo/awre.git", {branch, "master"}}},
  {wamper, {git, "https://github.com/aramallo/wamper.git", {branch, "master"}}},

  {backoff, {git, "https://github.com/ferd/backoff.git", {branch, master}}}]}.

{relx,
 [{release,
   {wamp_client, "1.1.0"},
   [kernel,
    stdlib,
    sasl,
    %% --------------
    jsone,
    msgpack,
    pbkdf2,
    wamper,
    awre,
    backoff,
    gproc,
    % log_formatter,
    flatlog,
    app_config,
    %% --------------
    wamp_client]},
  {sys_config, "./config/dev/sys.config"},
  {vm_args, "./config/vm.args"},
  {dev_mode, true},
  {include_erts, false},
  {extended_start_script, true},
  {overlay, [{mkdir, "data"}, {mkdir, "log"}, {mkdir, "etc"}]}]}.

{profiles,
 [{prd,
   [{relx,
     [{dev_mode, false},
      {include_src, false},
      {include_erts, true},
      {sys_config, "./config/prd/sys.config"}]}]},
  {sit,
   [{relx,
     [{dev_mode, false},
      {include_src, false},
      {include_erts, true},
      {sys_config, "./config/sit/sys.config"}]}]},
  {dev,
   [{relx,
     [{dev_mode, false},
      {include_src, false},
      {include_erts, true},
      {sys_config, "./config/dev/sys.config"}]}]},
  {lint,
   [{plugins,
     [{rebar3_lint,
       {git, "https://github.com/project-fifo/rebar3_lint.git", {tag, "v0.1.9"}}}]}]},
  {docs,
   [{deps,
     [{edown, ".*", {git, "https://github.com/uwiger/edown.git", {branch, "master"}}}]}]},
  {test, [{deps, [meck]}, {erl_opts, [debug_info, export_all]}]}]}.


{ct_opts, [{sys_config, "config/dev/sys.config"}]}.

{project_plugins, [rebar3_format, erlfmt]}.

{plugins, [rebar3_auto]}.

{shell,
 [{config, "config/dev/sys.config"},
  {apps, [sasl, msgpack, pbkdf2, jsone, wamper, awre, wamp_client]}]}.

{elvis,
 [#{dirs => ["apps/accounts/src"],
    filter => "*.erl",
    rules =>
        [%% {elvis_style, line_length,
         %%  #{ignore => [],
         %%    limit => 80,
         %%    skip_comments => false}},
         {elvis_style, no_tabs},
         {elvis_style, no_trailing_whitespace},
         {elvis_style, macro_names, #{ignore => []}},
         %% {elvis_style, macro_module_names},
         {elvis_style, operator_spaces, #{rules => [{right, ","}, {right, "++"}, {left, "++"}]}},
         %% {elvis_style, nesting_level, #{level => 3}},
         {elvis_style, god_modules, #{limit => 25, ignore => []}},
         {elvis_style, no_if_expression},
         %% {elvis_style, invalid_dynamic_call, #{ignore => []}},
         {elvis_style, used_ignored_variable},
         {elvis_style, no_behavior_info},
         {elvis_style,
          module_naming_convention,
          #{regex => "^[a-z]([a-z0-9]*_?)*(_SUITE)?$", ignore => []}},
         {elvis_style, function_naming_convention, #{regex => "^([a-z][a-z0-9]*_?)*$"}},
         {elvis_style, state_record_and_type},
         {elvis_style, no_spec_with_records}]},
  %% {elvis_style, dont_repeat_yourself, #{min_complexity => 10}}
  %% {elvis_style, no_debug_call, #{ignore => []}}
  #{dirs => ["."],
    filter => "Makefile",
    rules =>
        [{elvis_project, no_deps_master_erlang_mk, #{ignore => []}},
         {elvis_project, protocol_for_deps_erlang_mk, #{ignore => []}}]},
  #{dirs => ["."],
    filter => "rebar.config",
    rules =>
        [{elvis_project, no_deps_master_rebar, #{ignore => [awre, wamper, pbkdf2]}},
         {elvis_project, protocol_for_deps_rebar, #{ignore => []}}]}]}.

{format, [
  {files, ["src/*.erl", "include/*.hrl", "test/*.erl"]},
  {formatter, erlfmt_formatter},
  {options, #{print_width => 100, ignore_pragma => true}}
]}.


{dialyzer,
 [{warnings, [race_conditions, no_return, unmatched_returns, error_handling]},
  {get_warnings, true},
  {plt_apps, top_level_deps},
  {plt_extra_apps, []},
  {plt_location, local}]}.

  %% {base_plt_apps, [stdlib, kernel]},
  %% {base_plt_location, global}
